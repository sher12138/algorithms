/**
 * @brief this file is auto-generated by scripts/json_to_cpp.py. Do not edit!!!
 */

#include "config/auto_aeb_config.h"

namespace neodrive {
namespace aeb {
namespace config {

void InitAutoAebConfig(const Json::Value &input_json, AutoAebConfig &dest) {
  dest.aeb_switch = input_json["aeb_switch"].asBool();
  dest.pass_velocity_threshold =
      input_json["pass_velocity_threshold"].asDouble();
  dest.close_moving_obstacle_filter_threshold =
      input_json["close_moving_obstacle_filter_threshold"].asDouble();
  dest.sector_expand = input_json["sector_expand"].asDouble();
  dest.aeb_period_frequency = input_json["aeb_period_frequency"].asInt();
  dest.ignor_aeb_trigger_in_pdu_lon_distance =
      input_json["ignor_aeb_trigger_in_pdu_lon_distance"].asDouble();
  dest.ignor_aeb_trigger_in_pdu_lat_distance =
      input_json["ignor_aeb_trigger_in_pdu_lat_distance"].asDouble();
  dest.ignor_aeb_trigger_in_pdu_timuout_t =
      input_json["ignor_aeb_trigger_in_pdu_timuout_t"].asDouble();
  dest.chassis_msg_timeout_frames_threshold =
      input_json["chassis_msg_timeout_frames_threshold"].asInt();
  dest.control_cmd_msg_timeout_frames_threshold =
      input_json["control_cmd_msg_timeout_frames_threshold"].asInt();
  dest.perception_lms_msg_timeout_frames_threshold =
      input_json["perception_lms_msg_timeout_frames_threshold"].asInt();
  dest.perception_msg_timeout_frames_threshold =
      input_json["perception_msg_timeout_frames_threshold"].asInt();
  dest.decision_msg_timeout_frames_threshold =
      input_json["decision_msg_timeout_frames_threshold"].asInt();
  dest.planning_msg_timeout_frames_threshold =
      input_json["planning_msg_timeout_frames_threshold"].asInt();
  dest.prediction_msg_timeout_frames_threshold =
      input_json["prediction_msg_timeout_frames_threshold"].asInt();
  dest.canbus_wheel_msg_timeout_frames_threshold =
      input_json["canbus_wheel_msg_timeout_frames_threshold"].asInt();
  dest.localization_msg_timeout_frames_threshold =
      input_json["localization_msg_timeout_frames_threshold"].asInt();
  dest.baselink_in_odom_msg_timeout_frames_threshold =
      input_json["baselink_in_odom_msg_timeout_frames_threshold"].asInt();
  dest.freespace_msg_timeout_frames_threshold =
      input_json["freespace_msg_timeout_frames_threshold"].asInt();
  dest.strict_timeout_check = input_json["strict_timeout_check"].asDouble();
  dest.lenient_timeout_check = input_json["lenient_timeout_check"].asDouble();
  dest.lidar_obstacle_lost_threshold =
      input_json["lidar_obstacle_lost_threshold"].asInt();
  dest.relative_distance_threshold =
      input_json["relative_distance_threshold"].asDouble();
  dest.relative_speed_threshold =
      input_json["relative_speed_threshold"].asDouble();
  dest.double_check_imu_threshold =
      input_json["double_check_imu_threshold"].asDouble();
  dest.obstacle_collision_ttc = input_json["obstacle_collision_ttc"].asDouble();
}

}  // namespace config
}  // namespace aeb
}  // namespace neodrive
