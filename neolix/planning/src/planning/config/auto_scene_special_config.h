/**
 * @brief this file is auto-generated by scripts/json_to_cpp.py. Do not edit!!!
 */

#pragma once

#include <jsoncpp/json/json.h>
#include <string>
#include <unordered_map>
#include <vector>

namespace neodrive {
namespace planning {
namespace config {

struct AutoSceneSpecialConfig {
  struct InLaneUturn {
    std::string lane_id;
    float start_s;
    float end_s;
    std::string routing_end_lane_id;
    float routing_end_s;
    float routing_end_x;
    float routing_end_y;
    float routing_end_heading;
  };
  std::unordered_map<std::string, InLaneUturn> in_lane_uturn;
  struct FreespaceReferLineIn {
    float x;
    float y;
    float theta;
  };
  std::vector<FreespaceReferLineIn> freespace_refer_line_in;
  struct FreespaceReferLineOut {
    float x;
    float y;
    float theta;
  };
  std::vector<FreespaceReferLineOut> freespace_refer_line_out;
  struct BiasDrivingSetting {
    std::string lane_id;
    float start_s;
    float end_s;
    float bias_val;
  };
  std::unordered_map<std::string, BiasDrivingSetting> bias_driving_setting;
  struct Parking {
    std::vector<std::string> left_parking_ids;
    std::vector<std::string> c_type_parking_ids;
    std::vector<std::string> not_parking_out_ids;
  };
  Parking parking;
  struct ParkingThresholds {
    std::string id;
    float dis;
  };
  std::unordered_map<std::string, ParkingThresholds> parking_thresholds;
};

void InitAutoSceneSpecialConfig(const Json::Value &input_json,
                                AutoSceneSpecialConfig &dest);

}  // namespace config
}  // namespace planning
}  // namespace neodrive
